# -*- coding: utf-8 -*-

step = array = list(range(1, 31))

int4_16 = [
    0.9951, 0.9948, 0.995, 0.9953, 0.9953, 0.9954, 0.9953, 0.9954, 0.9953, 0.9954,
    0.9951, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954,
    0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954, 0.9954
]

int4_32 = [
    0.9925, 0.9921, 0.9925, 0.9931, 0.9932, 0.9934, 0.9932, 0.9934, 0.9933, 0.9936,
    0.9927, 0.9933, 0.9934, 0.9936, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935, 0.9935,
    0.9935, 0.9935, 0.9935, 0.9935, 0.9934, 0.9936, 0.9936, 0.9935, 0.9936, 0.9936
]

int4_64 = [
    0.9897, 0.9886, 0.9896, 0.9904, 0.9909, 0.9911, 0.991, 0.9913, 0.9911, 0.9916,
    0.9901, 0.9912, 0.9913, 0.9916, 0.9916, 0.9916, 0.9916, 0.9916, 0.9917, 0.9917,
    0.9917, 0.9917, 0.9917, 0.9917, 0.9913, 0.9917, 0.9917, 0.9916, 0.9917, 0.9916
]

int4_128 = [
    0.9857, 0.9844, 0.9872, 0.9877, 0.9886, 0.9888, 0.9885, 0.989, 0.9887, 0.9898,
    0.9874, 0.989, 0.9892, 0.9896, 0.9897, 0.9897, 0.9898, 0.9898, 0.9898, 0.9898,
    0.9898, 0.9898, 0.9898, 0.9898, 0.9892, 0.9898, 0.9898, 0.9896, 0.9898, 0.9897
]

int4_256 = [
    0.9812, 0.9795, 0.9835, 0.9846, 0.9862, 0.9861, 0.9857, 0.9867, 0.9863, 0.9879,
    0.9846, 0.9868, 0.9871, 0.9876, 0.9878, 0.9879, 0.9879, 0.9879, 0.9879, 0.9879,
    0.9879, 0.9879, 0.9879, 0.9879, 0.9871, 0.9879, 0.9879, 0.9877, 0.9879, 0.9878
]

int4_512 = [
    0.9764, 0.9741, 0.9793, 0.9812, 0.9829, 0.9829, 0.983, 0.9842, 0.9837, 0.986,
    0.9813, 0.9845, 0.9849, 0.9857, 0.986, 0.986, 0.986, 0.986, 0.986, 0.986,
    0.986, 0.986, 0.986, 0.986, 0.985, 0.986, 0.9861, 0.9858, 0.9861, 0.986
]

int8 = [
    0.9993, 0.9992, 0.9992, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9993, 0.9994,
    0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994,
    0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994, 0.9994
]

complex = [
    0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
    0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997,
    0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997, 0.9997
]

GB = [0.5, 32, 128, 128, 128, 512, 512, 512, 512, 128, 512, 512, 256, 256, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 256, 256, 256, 256, 512, 1024]

lists = [complex, int8, int4_16, int4_32, int4_64, int4_128, int4_256, int4_512 , GB]
names = ['float/half 100%/50%', 'int8 25%', 'int4(16) 18.75%', 'int4(32) 15.63%', 'int4(64) 14.07%', 'int4(128) 13.28%', 'int4(256) 12.89%', 'int4(512) 12.70%' , 'Complex32']

import matplotlib.pyplot as plt
plt.figure(figsize=(16, 12))
size = 31
for i in range(len(lists)-1):
    data = lists[i]
    name = names[i]
    line, = plt.plot(step, data, label=name, linewidth=4.5, marker='o', markersize=10)
    
    
    # 获取曲线的最后一个点的坐标
    x_end = step[-14]
    y_end = data[-14]
    if name == 'int8 25%':
        # import pdb; pdb.set_trace()
        # 将文本的y值下降0.01
        y_end -= 0.0018
        # x_end -= 2
    # 在曲线末端添加文字
    plt.text(x_end-3, y_end+0.0001, name, fontsize=size, color=line.get_color(), verticalalignment='bottom', horizontalalignment='left')

# plt.text(0.1, 0.1, "aaaaa", fontsize=12, color='red')
    
for sp in [10, 26]:
    plt.axvline(x=sp, linestyle='--', color='gray',linewidth = 3)
    

    
# plt.xlim([0, 600])
# plt.xlim([0, 39.5])
# plt.legend(bbox_to_anchor=(0.7, 1), fontsize=15)
plt.ylabel('Relative fidelity', fontsize=size)
plt.xlabel('Stem step', fontsize=size)

# 单独处理"GB"数据集的绘制
data_gb = lists[-1]
name_gb = names[-1]
ax = plt.gca()
ax2 = ax.twinx()  # 创建新的y轴
ax2.yaxis.set_ticks_position('right')  # 将y轴位置设置为右侧

ax2.bar(step, data_gb, label=name_gb, color='skyblue', alpha=0.3, width=0.9)
# , hatch='//'

# plt.legend(bbox_to_anchor=(0.7, 0.72), fontsize=15)

ax.tick_params(axis='x', labelsize=size)
ax.tick_params(axis='y', labelsize=size)
ax2.tick_params(axis='y', labelsize=size)


# plt.title('Single step quantization effect on relative fidelity', fontsize=15)
plt.xlabel('Stem step', fontsize=size)
plt.ylabel('Complex32 data (GB)', fontsize=size)

plt.savefig('graph6.jpg', dpi=1000, bbox_inches='tight')
plt.show()

